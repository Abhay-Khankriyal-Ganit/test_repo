name: Deploy Glue Jobs

on:
  push:
    branches:
      - main

jobs:
  discover-glue-jobs:
    runs-on: ubuntu-latest
    outputs:
      job-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Discover Glue jobs
        id: set-matrix
        run: |
          if [ ! -d "glue_jobs" ]; then
            echo "ERROR: glue_jobs/ directory does not exist!"
            exit 1
          fi
          jobs=$(ls glue_jobs/*.py | xargs -n1 basename | sed 's/\.py$//' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix={\"job\": $jobs}" >> $GITHUB_OUTPUT

  deploy-glue:
    needs: discover-glue-jobs
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.discover-glue-jobs.outputs.job-matrix) }}
    env:
      AWS_REGION: ap-south-1
      S3_BUCKET: glue-job-scripts-test-abhay
      SCRIPT_PREFIX: glue-scripts/my-new-folder/
      GLUE_ROLE_ARN: arn:aws:iam::123456789012:role/MyGlueRole  # Replace with your IAM role ARN
      RUN_ID: ${{ github.run_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure S3 bucket exists
        run: |
          if ! aws s3 ls "s3://${S3_BUCKET}" >/dev/null 2>&1; then
            echo "S3 bucket '${S3_BUCKET}' does not exist. Creating..."
            aws s3 mb "s3://${S3_BUCKET}" --region "${AWS_REGION}"
          else
            echo "S3 bucket '${S3_BUCKET}' exists."
          fi

      - name: Sync Glue scripts to S3
        run: |
          S3_PATH="s3://${S3_BUCKET}/${SCRIPT_PREFIX}${RUN_ID}/"
          echo "Syncing glue_jobs/ to $S3_PATH"
          aws s3 sync glue_jobs/ "$S3_PATH" --exact-timestamps

      - name: Create or Update Glue job
        run: |
          JOB_NAME="${{ matrix.job }}"
          S3_PATH="s3://${S3_BUCKET}/${SCRIPT_PREFIX}${RUN_ID}/"
          SCRIPT_S3_PATH="${S3_PATH}${JOB_NAME}.py"
          echo "Processing Glue job: $JOB_NAME"

          # Prepare valid job-config.json (JSON content starts at column 0)
          cat <<EOL > job-config.json
{
  "Name": "${JOB_NAME}",
  "Role": "${GLUE_ROLE_ARN}",
  "Command": {
    "Name": "glueetl",
    "ScriptLocation": "${SCRIPT_S3_PATH}",
    "PythonVersion": "3"
  },
  "MaxRetries": 0,
  "GlueVersion": "3.0",
  "NumberOfWorkers": 2,
  "WorkerType": "Standard"
}
EOL

          # Create or update Glue job
          if aws glue get-job --job-name "$JOB_NAME" >/dev/null 2>&1; then
            echo "Updating Glue job: $JOB_NAME"
            aws glue update-job --job-name "$JOB_NAME" --job-update file://job-config.json
          else
            echo "Creating Glue job: $JOB_NAME"
            aws glue create-job --cli-input-json file://job-config.json
          fi
 
