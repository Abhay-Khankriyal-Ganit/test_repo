name: Deploy Glue Jobs

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-glue:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1
      S3_BUCKET: glue-job-scripts-test-abhay
      SCRIPT_PREFIX: glue-scripts/
      GLUE_ROLE_ARN: arn:aws:iam::395616638160:role/AWSGlueServiceRole-glue-job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set RUN_ID
        run: echo "RUN_ID=$(date +%s)" >> $GITHUB_ENV

      - name: Ensure glue_jobs exists
        run: |
          if [ ! -d "glue_jobs" ]; then
            echo "ERROR: glue_jobs/ directory not found in repo root" >&2
            exit 1
          fi

      - name: Sync Glue scripts to S3
        run: |
          S3_PATH="s3://${S3_BUCKET}/${SCRIPT_PREFIX}${RUN_ID}/"
          echo "Syncing glue_jobs/ to $S3_PATH"
          aws s3 sync glue_jobs/ "$S3_PATH" --exact-timestamps
          echo "Sync complete."

      - name: Create or Update Glue jobs
        run: |
          S3_PATH="s3://${S3_BUCKET}/${SCRIPT_PREFIX}${RUN_ID}/"
          echo "Processing Glue scripts from $S3_PATH"

          for JOB_FILE in glue_jobs/*.py; do
            JOB_NAME=$(basename "$JOB_FILE" .py)
            SCRIPT_S3_PATH="${S3_PATH}${JOB_NAME}.py"
            echo "----"
            echo "Job: $JOB_NAME"
            echo "Script S3 path: $SCRIPT_S3_PATH"

            # create job-update.json (used for aws glue update-job)
            printf '%s' "{\"Role\":\"${GLUE_ROLE_ARN}\",\"Command\":{\"Name\":\"glueetl\",\"ScriptLocation\":\"${SCRIPT_S3_PATH}\",\"PythonVersion\":\"3\"},\"MaxRetries\":0,\"GlueVersion\":\"3.0\",\"NumberOfWorkers\":2,\"WorkerType\":\"Standard\"}" > job-update.json

            # create job-create.json (used for aws glue create-job)
            printf '%s' "{\"Name\":\"${JOB_NAME}\",\"Role\":\"${GLUE_ROLE_ARN}\",\"Command\":{\"Name\":\"glueetl\",\"ScriptLocation\":\"${SCRIPT_S3_PATH}\",\"PythonVersion\":\"3\"},\"MaxRetries\":0,\"GlueVersion\":\"3.0\",\"NumberOfWorkers\":2,\"WorkerType\":\"Standard\"}" > job-create.json

            # Check if job exists and call update or create accordingly
            if aws glue get-job --job-name "$JOB_NAME" >/dev/null 2>&1; then
              echo "Updating Glue job: $JOB_NAME"
              aws glue update-job --job-name "$JOB_NAME" --job-update file://job-update.json
            else
              echo "Creating Glue job: $JOB_NAME"
              aws glue create-job --cli-input-json file://job-create.json
            fi

            echo "Done: $JOB_NAME"
          done
 
